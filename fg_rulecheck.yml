# cli execution best practices:
# https://ansible-galaxy-fortios-docs.readthedocs.io/en/latest/faq.html#how-to-work-with-raw-fotios-cli
# diag firewall iprope lookup <source_ip> <Source_Port>  <destination_ip>  <destination_port>  <tcp or udp> <source_interface>
# diag firewall iprope lookup 10.10.44.46 1234 10.90.1.200 443 tcp Vlan44
# <src [10.10.44.46-1234] dst [10.90.1.200-443] proto tcp dev Vlan44> matches policy id: 4
# <src [10.10.44.46-1234] dst [10.90.1.200-443] proto tcp dev Vlan44> doesn't match any policy.
# http://{{server}}/api/v2/monitor/firewall/policy-lookup?sourceip=10.90.0.13&dest=10.194.2.5&destport=443&protocol=tcp&ipVersion=ipv4&srcintf=port2&vdom=root

- set_fact: 
    src_ip: "{{ local_rule.src.addresses[0].ipv4 }}"
    dest_ip: "{{ local_rule.dest.addresses[0].ipv4 }}"
    dest_service: "{{ local_rule.services[0] }}"
    src_intf: "{{ _src_intf }}"

- name: loading mapping file
  ansible.builtin.include_vars:
    file: files/fw_port_mapping.yml
    name: port_map

- set_fact: 
    _query: "sourceip={{ src_ip }}&dest={{ dest_ip }}&destport={{ port_map[dest_service].port }}&protocol={{ port_map[dest_service].proto }}&srcintf={{ src_intf }}&vdom={{ fw_fg_vdom }}"

- name: firewall policy lookup
  ansible.builtin.uri: 
    url: "{{ ansible_httpapi_proto }}://{{ ansible_host }}:{{ ansible_httpapi_port }}/api/v2/monitor/firewall/policy-lookup?{{ _query }}"
    method: GET
    validate_certs: no
    headers:
      Authorization: "Bearer {{ fg_access_token }}"
    status_code: 200
  register: _fw_lookup

- debug: 
    var: _fw_lookup
    verbosity: 2

- name: print policy diag result if exists
  debug: 
    msg: "existing policy ID: {{ _fw_lookup.json.results.policy_id }} found"
  when: _fw_lookup.json.results | length > 0 and _fw_lookup.json.results.success == true
  
- name: stop playbook if existing ID found
  ansible.builtin.meta: end_play
  when: 
    - _fw_lookup.json.results | length > 0
    - _fw_lookup.json.results.success == true
